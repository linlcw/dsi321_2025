services:
  lakefs_db:
    container_name: lakefs_db
    env_file:
      - .env
    image: treeverse/lakefs:1.7.0
    ports:
      - 8001:8000
    environment:
      LAKEFS_INSTALLATION_USER_NAME: "admin"
      LAKEFS_INSTALLATION_ACCESS_KEY_ID: "access_key" #username
      LAKEFS_INSTALLATION_SECRET_ACCESS_KEY: "secret_key" #password
      LAKEFS_DATABASE_TYPE: "local"
      LAKEFS_AUTH_ENCRYPT_SECRET_KEY: "wait"
      LAKEFS_BLOCKSTORE_TYPE: "local"

#About Prefect
##Prefect Database
database:
  image: postgres:alpine
  restart: always
  environment:
  - POSTGRES_USER
  - POSTGRES_PASSWORD
  - POSTGRES_DB
  expose:
    - 5432
  volumes:
    - db:/var/lib/postgresql/data
  profiles: ["server"]
  <<: *global-environment

## Prefect Server API and UI
server:
    image: prefecthq/prefect:3-python3.13
    restart: always
    volumes:
      - prefect:/root/.prefect
    entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "server", "start"]
    environment:
      - PREFECT_UI_URL=http://127.0.0.1:4200/api
      - PREFECT_API_URL=http://127.0.0.1:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
    ports:
      - 4200:4200
    depends_on:
      - database
    profiles: ["server"]
    <<: *global-environment

## Prefect Worker
  worker:
    image: prefecthq/prefect:3-python3.13
    restart: always
    entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "worker", "start", "-p", "YOUR_WORK_QUEUE_NAME"]
    environment:
      - PREFECT_API_URL=http://server:4200/api
    profiles: ["worker"]

### Prefect CLI
  cli:
    build:
      context: .
      dockerfile: config/docker/Dockerfile.cli
    entrypoint: "bash"
    working_dir: "/root/flows"
    volumes:
      - "./src/backend/pipeline:/root/flows"
    environment:
      - PREFECT_API_URL=http://server:4200/api
    profiles: ["cli"]

volumes:
  prefect:
  db: